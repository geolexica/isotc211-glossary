data:
  _revisions:
    current: 1f37da
    tree:
      1f37da:
        author:
          email: glossarist@ribose.com
          name: Glossarist bot
        object:
          abbrev: PI matching
          authoritative_source:
            clause: '4.11'
            link: https://www.iso.org/standard/32573.html
            ref: ISO 19155:2012
          date_accepted: '2012-11-01T00:00:00.000Z'
          definition: matching of a Place Identifier specifying a place with another
            type of PI identifying the same place
          entry_status: valid
          examples: []
          id: 1339
          language_code: eng
          notes:
          - A source PI can be matched with multiple target Place Identifiers.
          - PI matching can be made among coordinates, geographic identifiers and
            identifiers in the virtual world such as URI.
          release: '3'
          terms:
          - !!python/object/new:benedict.dicts.benedict
            dictitems:
              designation: Place Identifier matching
              normative_status: preferred
              type: expression
            state:
              _dict:
                designation: Place Identifier matching
                normative_status: preferred
                type: expression
              _keyattr_dynamic: false
              _keyattr_enabled: true
              _keypath_separator: /
              _pointer: true
        parents: []
        timeCreated: '2012-11-01T00:00:00.000Z'
  authoritativeSource:
  - !!python/object:benedict.dicts.benedict
    _dict: {}
    _keyattr_dynamic: false
    _keyattr_enabled: true
    _keypath_separator: /
    _pointer: true
  dates:
  - !!python/object/new:benedict.dicts.benedict
    dictitems:
      date: '2012-11-01T00:00:00.000Z'
      type: accepted
    state:
      _dict:
        date: '2012-11-01T00:00:00.000Z'
        type: accepted
      _keyattr_dynamic: false
      _keyattr_enabled: true
      _keypath_separator: /
      _pointer: true
  definition: '[{''content'': ''matching of a Place Identifier specifying a place
    with another type of PI identifying the same place''}]'
  examples: []
  id: 1339
  language_code: eng
  notes:
  - !!python/object/new:benedict.dicts.benedict
    dictitems:
      content: A source PI can be matched with multiple target Place Identifiers.
    state:
      _dict:
        content: A source PI can be matched with multiple target Place Identifiers.
      _keyattr_dynamic: false
      _keyattr_enabled: true
      _keypath_separator: /
      _pointer: true
  - !!python/object/new:benedict.dicts.benedict
    dictitems:
      content: PI matching can be made among coordinates, geographic identifiers and
        identifiers in the virtual world such as URI.
    state:
      _dict:
        content: PI matching can be made among coordinates, geographic identifiers
          and identifiers in the virtual world such as URI.
      _keyattr_dynamic: false
      _keyattr_enabled: true
      _keypath_separator: /
      _pointer: true
  release: '3'
  sources:
  - !!python/object/new:benedict.dicts.benedict
    dictitems:
      origin: &id001
        clause: '4.11'
        link: https://www.iso.org/standard/32573.html
        ref: ISO 19155:2012
      type: authoritative
    state:
      _dict:
        origin: *id001
        type: authoritative
      _keyattr_dynamic: false
      _keyattr_enabled: true
      _keypath_separator: /
      _pointer: true
  terms:
  - !!python/object/new:benedict.dicts.benedict
    dictitems:
      designation: PI matching
      type: abbreviation
    state:
      _dict:
        designation: PI matching
        type: abbreviation
      _keyattr_dynamic: false
      _keyattr_enabled: true
      _keypath_separator: /
      _pointer: true
  - !!python/object/new:benedict.dicts.benedict
    dictitems:
      designation: Place Identifier matching
      normative_status: preferred
      type: expression
    state:
      _dict:
        designation: Place Identifier matching
        normative_status: preferred
        type: expression
      _keyattr_dynamic: false
      _keyattr_enabled: true
      _keypath_separator: /
      _pointer: true
dateAccepted: 2023-04-08
id: 99d1495a-8a86-57f4-8c24-d8dcfeeffe18
status: valid
