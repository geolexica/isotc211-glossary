data:
  _revisions:
    current: acd2ca
    tree:
      acd2ca:
        author:
          email: glossarist@ribose.com
          name: Glossarist bot
        object:
          abbrev: ∅
          authoritative_source:
            clause: (E), 3.32
            link: https://www.iso.org/standard/66175.html
            ref: ISO 19107:2019
          date_accepted: '2019-12-02T00:00:00.000Z'
          definition: set without any elements
          entry_status: valid
          examples: []
          id: 2158
          language_code: eng
          notes:
          - Sets are equal if they contain exactly the same elements. Since any two
            empty sets would share exactly the same contained elements (by definition
            none), they are, by definition, equal. The empty set (∅) can be considered
            a geometric entity, because all the elements it contains are points. This
            is a vacuous statement since the set ∅ contains no elements, and therefore
            the "for all" statement has nothing to test and is thus true in each of
            its non-existent cases. There are a lot of true but vacuous statements
            in proofs about ∅. This confuses some programmers since many systems use
            type safe sets, in which the class of the entities determines a class
            for the container set. The math does not care about "class" and only sees
            sets; so that an empty set of aardvarks and an empty set of zebras in
            mathematics are (is?) the same set. The other confusion is that ∅ is not
            the database Null introduced by Codd and used in relational and other
            query languages in 3 valued logic. Null means unknown and many statements
            involving Null are undecidable (neither provably true nor provably false).
            The empty set is not "lack of knowledge" but certainty in the nonexistence
            of elements in the set. Most statements beginning "for all elements in
            ∅" are true, but vacuous. Most statements beginning "there exist an element
            in ∅" are always categorically false. It is almost impossible to construct
            an undecidable statement about ∅. Null and ∅ are not related. "Void" can
            mean "invalid" or "completely empty."
          release: '5'
          review_date: '2019-12-02T00:00:00.000Z'
          review_decision: accepted
          review_decision_date: '2019-12-02T00:00:00.000Z'
          review_decision_event: Normal ISO processing
          review_decision_notes: Publication of document ISO 19107:2019(E)
          review_status: final
          terms:
          - designation: empty set <mathematics>
            normative_status: preferred
            type: expression
        parents: []
        timeCreated: '2019-12-02T00:00:00.000Z'
  authoritativeSource:
  - {}
  dates:
  - date: '2019-12-02T00:00:00.000Z'
    type: accepted
  definition:
  - content: set without any elements
  examples: []
  id: 2158
  language_code: eng
  notes:
  - content: Sets are equal if they contain exactly the same elements. Since any two
      empty sets would share exactly the same contained elements (by definition none),
      they are, by definition, equal. The empty set (∅) can be considered a geometric
      entity, because all the elements it contains are points. This is a vacuous statement
      since the set ∅ contains no elements, and therefore the "for all" statement
      has nothing to test and is thus true in each of its non-existent cases. There
      are a lot of true but vacuous statements in proofs about ∅. This confuses some
      programmers since many systems use type safe sets, in which the class of the
      entities determines a class for the container set. The math does not care about
      "class" and only sees sets; so that an empty set of aardvarks and an empty set
      of zebras in mathematics are (is?) the same set. The other confusion is that
      ∅ is not the database Null introduced by Codd and used in relational and other
      query languages in 3 valued logic. Null means unknown and many statements involving
      Null are undecidable (neither provably true nor provably false). The empty set
      is not "lack of knowledge" but certainty in the nonexistence of elements in
      the set. Most statements beginning "for all elements in ∅" are true, but vacuous.
      Most statements beginning "there exist an element in ∅" are always categorically
      false. It is almost impossible to construct an undecidable statement about ∅.
      Null and ∅ are not related. "Void" can mean "invalid" or "completely empty."
  release: '5'
  reviewDate: 2019-12-02
  reviewDecisionDate: 2019-12-02
  reviewDecisionEvent: Normal ISO processing
  review_decision: accepted
  review_decision_notes: Publication of document ISO 19107:2019(E)
  review_status: final
  sources:
  - origin:
      clause: (E), 3.32
      link: https://www.iso.org/standard/66175.html
      ref: ISO 19107:2019
    type: authoritative
  terms:
  - designation: ∅
    type: abbreviation
  - designation: empty set <mathematics>
    normative_status: preferred
    type: expression
dateAccepted: 2023-04-17
id: 7940bb9f-29f8-504b-971f-550fc9d38dc7
status: valid
