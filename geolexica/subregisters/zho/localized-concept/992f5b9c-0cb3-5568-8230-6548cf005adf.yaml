data:
  _revisions:
    current: ca535a
    tree:
      ca535a:
        author:
          email: glossarist@ribose.com
          name: Data migration procedure
        object:
          authoritative_source:
            link: https://www.iso.org/standard/40601.html
            ref: ISO 19132:2007
          date_accepted: '2007-10-15T00:00:00.000Z'
          definition: 通过信息转换或消息通讯，实现两个或多个软件系统的连接。
          entry_status: valid
          examples: []
          id: 660
          language_code: zho
          notes:
          - 耦合与集成比较而言，信息传输的概念模式必须与某些层次上相一致。只要语义内容是正确的，并且可映射到规范的概念模式的表达。在信息数据表示中耦合应用可以并且经常是灵活的。用于XML消息的最常见的映射技术是XSLT，转换样式表可以由服务代理或服务提供者提供。对服务提供者来说，通过几个逻辑等价信息API提供它的功能，每一个功能由不同的URI连接到XSLT转换桥上，并通过同一内码实现，这种方法被认为是最佳做法。
          - 在文献中，目前，松耦合和紧耦合是没有明确定义的术语。一般来说, '紧'耦合在请求者和响应者间存在由于使用接口引发的各种依赖,而'松'耦合并没有这种依赖性。这种依赖的本质并没有在作者间一致定义。在这种情况下,
            '紧'耦合或'紧'集成都是不好的实践，这是自这类术语提出后的共识，有些文献将集成当成紧耦合,这是不准确的描述。
          review_indicator: ''
          terms:
          - !!python/object/new:benedict.dicts.benedict
            dictitems:
              designation: 耦合
              normative_status: preferred
              type: expression
            state:
              _dict:
                designation: 耦合
                normative_status: preferred
                type: expression
              _keyattr_dynamic: false
              _keyattr_enabled: true
              _keypath_separator: /
              _pointer: true
        parents: []
        timeCreated: '2007-10-15T00:00:00.000Z'
  authoritativeSource:
  - !!python/object:benedict.dicts.benedict
    _dict: {}
    _keyattr_dynamic: false
    _keyattr_enabled: true
    _keypath_separator: /
    _pointer: true
  dates:
  - !!python/object/new:benedict.dicts.benedict
    dictitems:
      date: '2007-10-15T00:00:00.000Z'
      type: accepted
    state:
      _dict:
        date: '2007-10-15T00:00:00.000Z'
        type: accepted
      _keyattr_dynamic: false
      _keyattr_enabled: true
      _keypath_separator: /
      _pointer: true
  definition: '[{''content'': ''通过信息转换或消息通讯，实现两个或多个软件系统的连接。''}]'
  examples: []
  id: 660
  language_code: zho
  notes:
  - !!python/object/new:benedict.dicts.benedict
    dictitems:
      content: 耦合与集成比较而言，信息传输的概念模式必须与某些层次上相一致。只要语义内容是正确的，并且可映射到规范的概念模式的表达。在信息数据表示中耦合应用可以并且经常是灵活的。用于XML消息的最常见的映射技术是XSLT，转换样式表可以由服务代理或服务提供者提供。对服务提供者来说，通过几个逻辑等价信息API提供它的功能，每一个功能由不同的URI连接到XSLT转换桥上，并通过同一内码实现，这种方法被认为是最佳做法。
    state:
      _dict:
        content: 耦合与集成比较而言，信息传输的概念模式必须与某些层次上相一致。只要语义内容是正确的，并且可映射到规范的概念模式的表达。在信息数据表示中耦合应用可以并且经常是灵活的。用于XML消息的最常见的映射技术是XSLT，转换样式表可以由服务代理或服务提供者提供。对服务提供者来说，通过几个逻辑等价信息API提供它的功能，每一个功能由不同的URI连接到XSLT转换桥上，并通过同一内码实现，这种方法被认为是最佳做法。
      _keyattr_dynamic: false
      _keyattr_enabled: true
      _keypath_separator: /
      _pointer: true
  - !!python/object/new:benedict.dicts.benedict
    dictitems:
      content: 在文献中，目前，松耦合和紧耦合是没有明确定义的术语。一般来说, '紧'耦合在请求者和响应者间存在由于使用接口引发的各种依赖,而'松'耦合并没有这种依赖性。这种依赖的本质并没有在作者间一致定义。在这种情况下,
        '紧'耦合或'紧'集成都是不好的实践，这是自这类术语提出后的共识，有些文献将集成当成紧耦合,这是不准确的描述。
    state:
      _dict:
        content: 在文献中，目前，松耦合和紧耦合是没有明确定义的术语。一般来说, '紧'耦合在请求者和响应者间存在由于使用接口引发的各种依赖,而'松'耦合并没有这种依赖性。这种依赖的本质并没有在作者间一致定义。在这种情况下,
          '紧'耦合或'紧'集成都是不好的实践，这是自这类术语提出后的共识，有些文献将集成当成紧耦合,这是不准确的描述。
      _keyattr_dynamic: false
      _keyattr_enabled: true
      _keypath_separator: /
      _pointer: true
  review_indicator: ''
  sources:
  - !!python/object/new:benedict.dicts.benedict
    dictitems:
      origin: &id001
        link: https://www.iso.org/standard/40601.html
        ref: ISO 19132:2007
      type: authoritative
    state:
      _dict:
        origin: *id001
        type: authoritative
      _keyattr_dynamic: false
      _keyattr_enabled: true
      _keypath_separator: /
      _pointer: true
  terms:
  - !!python/object/new:benedict.dicts.benedict
    dictitems:
      designation: 耦合
      normative_status: preferred
      type: expression
    state:
      _dict:
        designation: 耦合
        normative_status: preferred
        type: expression
      _keyattr_dynamic: false
      _keyattr_enabled: true
      _keypath_separator: /
      _pointer: true
dateAccepted: 2023-04-08
id: 992f5b9c-0cb3-5568-8230-6548cf005adf
status: valid
