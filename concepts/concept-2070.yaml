term: maximum <mathematics>
termid: 2070
eng:
  id: 2070
  abbrev: max <mathematics>
  definition: >-
    smallest element larger than or equal to all elements of a set contained in
    an ordered domain <<math>>
  language_code: eng
  notes:
    - >-
      \[[\forall a \in A \implies max(A) \geq a] \implies [\forall b \ni [(b \ni
      [\forall a \in A \implies b \geq a] \implies [max(a) \leq b]]\] Any number
      is an upper bound of `O/` (empty set) as a set of numbers, because any
      given number is greater than any number in `O/` (an admitted vacuous
      statement since there is no number in `O/`, but true nonetheless). This
      means that the `max(O/)` must be smaller than any number; thus `-oo`.
  examples: []
  entry_status: valid
  authoritative_source:
    ref: 'ISO 19107:2019'
    clause: '(E), 3.60'
    link: 'https://www.iso.org/standard/66175.html'
  date_accepted: 2019-12-01T16:00:00.000Z
  review_date: 2019-12-01T16:00:00.000Z
  review_status: final
  review_decision: accepted
  review_decision_date: 2019-12-01T16:00:00.000Z
  review_decision_event: Normal ISO processing
  review_decision_notes: 'Publication of document ISO 19107:2019(E)'
  release: '5'
  terms:
    - type: expression
      designation: maximum <mathematics>
      normative_status: preferred
    - designation: least upper bound <mathematics>
      type: expression
  _revisions:
    current: 4c05d6
    tree:
      4c05d6:
        object:
          id: 2070
          abbrev: max <mathematics>
          definition: >-
            smallest element larger than or equal to all elements of a set
            contained in an ordered domain <<math>>
          language_code: eng
          notes:
            - >-
              \[[\forall a \in A \implies max(A) \geq a] \implies [\forall b \ni
              [(b \ni [\forall a \in A \implies b \geq a] \implies [max(a) \leq
              b]]\] Any number is an upper bound of `O/` (empty set) as a set of
              numbers, because any given number is greater than any number in
              `O/` (an admitted vacuous statement since there is no number in
              `O/`, but true nonetheless). This means that the `max(O/)` must be
              smaller than any number; thus `-oo`.
          examples: []
          entry_status: valid
          authoritative_source:
            ref: 'ISO 19107:2019'
            clause: '(E), 3.60'
            link: 'https://www.iso.org/standard/66175.html'
          date_accepted: 2019-12-01T16:00:00.000Z
          review_date: 2019-12-01T16:00:00.000Z
          review_status: final
          review_decision: accepted
          review_decision_date: 2019-12-01T16:00:00.000Z
          review_decision_event: Normal ISO processing
          review_decision_notes: 'Publication of document ISO 19107:2019(E)'
          release: '5'
          terms:
            - type: expression
              designation: maximum <mathematics>
              normative_status: preferred
            - designation: least upper bound <mathematics>
              type: expression
        parents: []
        timeCreated: 2019-12-01T16:00:00.000Z
        author:
          name: Glossarist bot
          email: glossarist@ribose.com
