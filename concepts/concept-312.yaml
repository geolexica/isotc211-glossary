---
termid: 312
term: object
eng:
  id: 312
  terms:
  - type: expression
    normative_status: preferred
    designation: object
  definition:
  - content: entity with a well defined boundary and identity that encapsulates state
      and behaviour
  notes:
  - content: This term was first used in this way in the general theory of object
      oriented programming, and later adopted for use in this same sense in UML. An
      object is an instance of a class. Attributes and relationships represent state.
      Operations, methods, and state machines represent behavior.
  examples: []
  language_code: eng
  entry_status: valid
  sources:
  - type: authoritative
    origin:
      ref: OMG/UML UML Semantics
      clause: version 1.3, 1997.
  - type: lineage
    origin:
      ref: ISO 19107:2003
  lineage_source_similarity: 1
  dates:
  - type: accepted
    date: '2003-05-01T00:00:00.000Z'
  release: '1'
  _revisions:
    current: 633de0
    tree:
      633de0:
        object:
          id: 312
          definition: entity with a well defined boundary and identity that encapsulates
            state and behaviour
          language_code: eng
          notes:
          - This term was first used in this way in the general theory of object oriented
            programming, and later adopted for use in this same sense in UML. An object
            is an instance of a class. Attributes and relationships represent state.
            Operations, methods, and state machines represent behavior.
          examples: []
          entry_status: valid
          authoritative_source:
            ref: OMG/UML UML Semantics
            clause: version 1.3, 1997.
          lineage_source: ISO 19107:2003
          lineage_source_similarity: 1
          date_accepted: '2003-05-01T00:00:00.000Z'
          release: '1'
          terms:
          - type: expression
            designation: object
            normative_status: preferred
        parents: []
        timeCreated: '2003-05-01T00:00:00.000Z'
        author:
          name: Glossarist bot
          email: glossarist@ribose.com
ara:
  id: 312
  terms:
  - type: expression
    normative_status: preferred
    designation: كائن
  definition:
  - content: كيان ذو حدود واضحة المعالم وهوية تنطوي على حالة وسلوك
  notes:
  - content: استخدم هذا المصطلح بهذه الطريقة للمرة الأولى في النظرية العامة للبرمجة
      الموجهة لهدف ، وتم تبنيه لاحقا للاستعمال بهذا المعنى في لغةUML. الغرض أو الكيان
      هو عبارة عن مثال لفئة. البيانات الوصفية والعلاقات تمثل الحالة. أما العمليات
      , والطرق , وآليات الحالة فتمثل السلوك أو التصرف .
  examples: []
  language_code: ara
  entry_status: valid
  sources:
  - type: authoritative
    origin:
      ref: OMG/UML UML Semantics
      clause: version 1.3, 1997.
  dates:
  - type: accepted
    date: '2003-05-01T00:00:00.000Z'
  release: '1'
  _revisions:
    current: 1e268f
    tree:
      1e268f:
        object:
          id: 312
          definition: كيان ذو حدود واضحة المعالم وهوية تنطوي على حالة وسلوك
          language_code: ara
          notes:
          - استخدم هذا المصطلح بهذه الطريقة للمرة الأولى في النظرية العامة للبرمجة
            الموجهة لهدف ، وتم تبنيه لاحقا للاستعمال بهذا المعنى في لغةUML. الغرض
            أو الكيان هو عبارة عن مثال لفئة. البيانات الوصفية والعلاقات تمثل الحالة.
            أما العمليات , والطرق , وآليات الحالة فتمثل السلوك أو التصرف .
          examples: []
          entry_status: valid
          authoritative_source:
            ref: OMG/UML UML Semantics
            clause: version 1.3, 1997.
          date_accepted: '2003-05-01T00:00:00.000Z'
          release: '1'
          terms:
          - type: expression
            designation: كائن
            normative_status: preferred
        parents: []
        timeCreated: '2003-05-01T00:00:00.000Z'
        author:
          name: Glossarist bot
          email: glossarist@ribose.com
zho:
  id: 312
  terms:
  - type: expression
    normative_status: preferred
    designation: 对象<UML>
  definition:
  - content: 具有明确定义的边界与标识，封装了状态与行为的实体。
  notes:
  - content: 状态由属性和关联表示。行为由操作、方法和状态机表示。对象是类的实例。参见：类、实例。
  examples: []
  language_code: zho
  entry_status: valid
  sources:
  - type: authoritative
    origin:
      ref: OMG/UML UML Semantics
      clause: version 1.3, 1997.
  dates:
  - type: accepted
    date: '2003-05-01T00:00:00.000Z'
  _revisions:
    current: cb09b3
    tree:
      cb09b3:
        object:
          id: 312
          definition: 具有明确定义的边界与标识，封装了状态与行为的实体。
          language_code: zho
          notes:
          - 状态由属性和关联表示。行为由操作、方法和状态机表示。对象是类的实例。参见：类、实例。
          examples: []
          entry_status: valid
          authoritative_source:
            ref: OMG/UML UML Semantics
            clause: version 1.3, 1997.
          date_accepted: '2003-05-01T00:00:00.000Z'
          terms:
          - type: expression
            designation: 对象<UML>
            normative_status: preferred
        parents: []
        timeCreated: '2003-05-01T00:00:00.000Z'
        author:
          name: Data migration procedure
          email: glossarist@ribose.com
fin:
  id: 312
  terms:
  - type: expression
    normative_status: preferred
    designation: objekti
  - type: expression
    designation: olio
  definition:
  - content: tietojärjestelmässä yksilöitävissä oleva kokonaisuus, jolla on tila ja
      käyttäytyminen
  notes:
  - content: Termiä objekti käytettiin tässä merkityksessä alun perin objektiorientoituneen
      ohjelmoinnin yleisessä teoriassa, ja myöhemmin termi otettiin käyttöön samassa
      merkityksessä UML:ssä. Objekti on luokan ilmentymä. "Tila" viittaa attribuutteihin
      ja suhteisiin, "käyttäytyminen" taas operaatioihin, metodeihin ja tilakoneisiin.
  examples: []
  language_code: fin
  entry_status: valid
  sources:
  - type: authoritative
    origin:
      ref: OMG/UML UML Semantics
      clause: version 1.3, 1997.
  - type: lineage
    origin:
      ref: 'Sanastokeskus TSK: Geoinformatiikan sanasto (TSK 42), 2011'
  dates:
  - type: accepted
    date: '2003-05-01T00:00:00.000Z'
  _revisions:
    current: 4accc0
    tree:
      4accc0:
        object:
          id: 312
          definition: tietojärjestelmässä yksilöitävissä oleva kokonaisuus, jolla
            on tila ja käyttäytyminen
          language_code: fin
          notes:
          - Termiä objekti käytettiin tässä merkityksessä alun perin objektiorientoituneen
            ohjelmoinnin yleisessä teoriassa, ja myöhemmin termi otettiin käyttöön
            samassa merkityksessä UML:ssä. Objekti on luokan ilmentymä. "Tila" viittaa
            attribuutteihin ja suhteisiin, "käyttäytyminen" taas operaatioihin, metodeihin
            ja tilakoneisiin.
          examples: []
          entry_status: valid
          authoritative_source:
            ref: OMG/UML UML Semantics
            clause: version 1.3, 1997.
          lineage_source: 'Sanastokeskus TSK: Geoinformatiikan sanasto (TSK 42), 2011'
          date_accepted: '2003-05-01T00:00:00.000Z'
          terms:
          - type: expression
            designation: objekti
            normative_status: preferred
          - designation: olio
            type: expression
        parents: []
        timeCreated: '2003-05-01T00:00:00.000Z'
        author:
          name: Glossarist bot
          email: glossarist@ribose.com
fra:
  id: 312
  terms:
  - type: expression
    normative_status: preferred
    designation: objet
  definition:
  - content: entité avec une frontière bien définie et une identité, qui encapsule
      l'état et le comportement
  notes: []
  examples: []
  language_code: fra
  entry_status: valid
  sources:
  - type: authoritative
    origin:
      ref: OMG/UML UML Semantics
      clause: version 1.3, 1997.
  - type: lineage
    origin:
      ref: ISO 19107
  lineage_source_similarity: 1
  dates:
  - type: accepted
    date: '2003-05-01T00:00:00.000Z'
  _revisions:
    current: e7a924
    tree:
      e7a924:
        object:
          id: 312
          definition: entité avec une frontière bien définie et une identité, qui
            encapsule l'état et le comportement
          language_code: fra
          notes: []
          examples: []
          entry_status: valid
          authoritative_source:
            ref: OMG/UML UML Semantics
            clause: version 1.3, 1997.
          lineage_source: ISO 19107
          lineage_source_similarity: 1
          date_accepted: '2003-05-01T00:00:00.000Z'
          terms:
          - type: expression
            designation: objet
            normative_status: preferred
        parents: []
        timeCreated: '2003-05-01T00:00:00.000Z'
        author:
          name: Glossarist bot
          email: glossarist@ribose.com
deu:
  id: 312
  terms:
  - type: expression
    normative_status: preferred
    designation: Objekt
  definition:
  - content: Einheit mit einer wohldefinierten Grenze und Identität, die Zustand und
      Verhalten einschließt
  notes:
  - content: This term was first used in this way in the general theory of object
      oriented programming, and later adopted for use in this same sense in UML. An
      object is an instance of a class. Attributes and relationships represent state.
      Operations, methods, and state machines represent behavior.
  examples: []
  language_code: deu
  entry_status: valid
  sources:
  - type: authoritative
    origin:
      ref: OMG/UML UML Semantics
      clause: version 1.3, 1997.
  dates:
  - type: accepted
    date: '2003-05-01T00:00:00.000Z'
  release: '1'
  _revisions:
    current: 1958c2
    tree:
      1958c2:
        object:
          id: 312
          definition: Einheit mit einer wohldefinierten Grenze und Identität, die
            Zustand und Verhalten einschließt
          language_code: deu
          notes:
          - This term was first used in this way in the general theory of object oriented
            programming, and later adopted for use in this same sense in UML. An object
            is an instance of a class. Attributes and relationships represent state.
            Operations, methods, and state machines represent behavior.
          examples: []
          entry_status: valid
          authoritative_source:
            ref: OMG/UML UML Semantics
            clause: version 1.3, 1997.
          date_accepted: '2003-05-01T00:00:00.000Z'
          release: '1'
          terms:
          - type: expression
            designation: Objekt
            normative_status: preferred
        parents: []
        timeCreated: '2003-05-01T00:00:00.000Z'
        author:
          name: Data migration procedure
          email: glossarist@ribose.com
kor:
  id: 312
  terms:
  - type: expression
    normative_status: preferred
    designation: 객체
  definition:
  - content: 상태와 행태를 캡슐화한 잘 정의된 경계와 식별특성을 갖는 개체
  notes:
  - content: 상태는 속성과 관계에 의해 표현되고, 행태는 연산, 방법 그리고 상태 메커니즘을 통해 표현된다. 객체는 클래스의 인스턴스이다.
      클래스, 인스턴스를 참조
  examples: []
  language_code: kor
  entry_status: valid
  sources:
  - type: authoritative
    origin:
      ref: OMG/UML UML Semantics
      clause: version 1.3, 1997.
  - type: lineage
    origin:
      ref: KS X ISO 19107
  dates:
  - type: accepted
    date: '2009-12-29T00:00:00.000Z'
  release: '1'
  _revisions:
    current: ce875e
    tree:
      ce875e:
        object:
          id: 312
          definition: 상태와 행태를 캡슐화한 잘 정의된 경계와 식별특성을 갖는 개체
          language_code: kor
          notes:
          - 상태는 속성과 관계에 의해 표현되고, 행태는 연산, 방법 그리고 상태 메커니즘을 통해 표현된다. 객체는 클래스의 인스턴스이다.
            클래스, 인스턴스를 참조
          examples: []
          entry_status: valid
          authoritative_source:
            ref: OMG/UML UML Semantics
            clause: version 1.3, 1997.
          lineage_source: KS X ISO 19107
          date_accepted: '2009-12-29T00:00:00.000Z'
          release: '1'
          terms:
          - type: expression
            designation: 객체
            normative_status: preferred
        parents: []
        timeCreated: '2009-12-29T00:00:00.000Z'
        author:
          name: Glossarist bot
          email: glossarist@ribose.com
rus:
  id: 312
  terms:
  - type: expression
    normative_status: preferred
    designation: объект
  definition:
  - content: сущность с четко  определенными границами и индивидуальностью, инкапсулирующая
      состояние и поведение
  notes:
  - content: Этот термин впервые был применен в общей теории объектно-ориентированного
      программирования, а позже принят для использования в UML. Объект является экземпляром
      класса. Атрибуты и отношения представляют состояние. Операции, методы и  конечные
      автоматы представляют поведение
  examples: []
  language_code: rus
  entry_status: valid
  sources:
  - type: authoritative
    origin:
      ref: OMG/UML UML Semantics
      clause: version 1.3, 1997.
  - type: lineage
    origin:
      ref: Internet
  dates:
  - type: accepted
    date: '2003-05-01T00:00:00.000Z'
  _revisions:
    current: 0fcf9c
    tree:
      0fcf9c:
        object:
          id: 312
          definition: сущность с четко  определенными границами и индивидуальностью,
            инкапсулирующая состояние и поведение
          language_code: rus
          notes:
          - Этот термин впервые был применен в общей теории объектно-ориентированного
            программирования, а позже принят для использования в UML. Объект является
            экземпляром класса. Атрибуты и отношения представляют состояние. Операции,
            методы и  конечные автоматы представляют поведение
          examples: []
          entry_status: valid
          authoritative_source:
            ref: OMG/UML UML Semantics
            clause: version 1.3, 1997.
          lineage_source: Internet
          date_accepted: '2003-05-01T00:00:00.000Z'
          terms:
          - type: expression
            designation: объект
            normative_status: preferred
        parents: []
        timeCreated: '2003-05-01T00:00:00.000Z'
        author:
          name: Glossarist bot
          email: glossarist@ribose.com
spa:
  id: 312
  terms:
  - type: expression
    normative_status: preferred
    designation: objeto
  definition:
  - content: entidad con un límite y una identidad bien definidos, que encapsula estado
      y comportamiento
  notes:
  - content: Este término se usó por primera vez en este sentido en la teoría general
      de la programación orientada a objetos y luego se adoptó en UML para usarse
      con el mismo sentido. Un objeto es una instancia de una clase. Los atributos
      y relaciones representan el estado. Las operaciones, métodos y maquinas de estados,
      representan el comportamiento.
  examples: []
  language_code: spa
  entry_status: valid
  sources:
  - type: authoritative
    origin:
      ref: OMG/UML UML Semantics
      clause: version 1.3, 1997.
  dates:
  - type: accepted
    date: '2003-05-01T00:00:00.000Z'
  release: '1'
  _revisions:
    current: '09d671'
    tree:
      '09d671':
        object:
          id: 312
          definition: entidad con un límite y una identidad bien definidos, que encapsula
            estado y comportamiento
          language_code: spa
          notes:
          - Este término se usó por primera vez en este sentido en la teoría general
            de la programación orientada a objetos y luego se adoptó en UML para usarse
            con el mismo sentido. Un objeto es una instancia de una clase. Los atributos
            y relaciones representan el estado. Las operaciones, métodos y maquinas
            de estados, representan el comportamiento.
          examples: []
          entry_status: valid
          authoritative_source:
            ref: OMG/UML UML Semantics
            clause: version 1.3, 1997.
          date_accepted: '2003-05-01T00:00:00.000Z'
          release: '1'
          terms:
          - type: expression
            designation: objeto
            normative_status: preferred
        parents: []
        timeCreated: '2003-05-01T00:00:00.000Z'
        author:
          name: Glossarist bot
          email: glossarist@ribose.com
swe:
  id: 312
  terms:
  - type: expression
    normative_status: preferred
    designation: objekt
  definition:
  - content: "(allmänt:) enstaka företeelse som är möjlig att urskilja"
  notes:
  - content: This term was first used in this way in the general theory of object
      oriented programming, and later adopted for use in this same sense in UML. An
      object is an instance of a class. Attributes and relationships represent state.
      Operations, methods, and state machines represent behavior.
  examples: []
  country_code: swe
  language_code: swe
  entry_status: valid
  sources:
  - type: authoritative
    origin:
      ref: OMG/UML UML Semantics
      clause: version 1.3, 1997.
  - type: lineage
    origin:
      ref: ISO 19107:2003
  lineage_source_similarity: 1
  dates:
  - type: accepted
    date: '2003-05-01T00:00:00.000Z'
  release: '1'
  _revisions:
    current: f1ff3a
    tree:
      f1ff3a:
        object:
          id: 312
          definition: "(allmänt:) enstaka företeelse som är möjlig att urskilja"
          country_code: swe
          language_code: swe
          notes:
          - This term was first used in this way in the general theory of object oriented
            programming, and later adopted for use in this same sense in UML. An object
            is an instance of a class. Attributes and relationships represent state.
            Operations, methods, and state machines represent behavior.
          examples: []
          entry_status: valid
          authoritative_source:
            ref: OMG/UML UML Semantics
            clause: version 1.3, 1997.
          lineage_source: ISO 19107:2003
          lineage_source_similarity: 1
          date_accepted: '2003-05-01T00:00:00.000Z'
          release: '1'
          terms:
          - type: expression
            designation: objekt
            normative_status: preferred
        parents: []
        timeCreated: '2003-05-01T00:00:00.000Z'
        author:
          name: Glossarist bot
          email: glossarist@ribose.com
