term: type coercion <programming>
termid: 2255
eng:
  id: 2255
  definition: >-
    conversion of one type of value to a value of a different type with similar
    content
  language_code: eng
  notes:
    - >-
      Point and DirectPosition are informationally identical (related to each
      other in a one to one fashion) in this context. Given a DirectPosition, a
      Point can be constructed. Given a Point, a DirectPosition can be derived
      from of its coordinates. If coercion is supported, a Point may be used
      where a DirectPosition is requested, and vice versa. Most programming
      languages use coercion, but others use "cast" operators (a type of
      constructor) requiring the programmer to initiate the coercion. "Strong
      substantiality" is related in that a subtype instance can always be
      coerced to any of its supertypes.
  examples: []
  entry_status: valid
  authoritative_source:
    ref: 'ISO 19107:2019'
    clause: '(E), 3.102'
    link: 'https://www.iso.org/standard/66175.html'
  date_accepted: 2019-12-01T16:00:00.000Z
  review_date: 2019-12-01T16:00:00.000Z
  review_status: final
  review_decision: accepted
  review_decision_date: 2019-12-01T16:00:00.000Z
  review_decision_event: Normal ISO processing
  review_decision_notes: 'Publication of document ISO 19107:2019(E)'
  release: '5'
  terms:
    - type: expression
      designation: type coercion <programming>
      normative_status: preferred
  _revisions:
    current: c65844
    tree:
      c65844:
        object:
          id: 2255
          definition: >-
            conversion of one type of value to a value of a different type with
            similar content
          language_code: eng
          notes:
            - >-
              Point and DirectPosition are informationally identical (related to
              each other in a one to one fashion) in this context. Given a
              DirectPosition, a Point can be constructed. Given a Point, a
              DirectPosition can be derived from of its coordinates. If coercion
              is supported, a Point may be used where a DirectPosition is
              requested, and vice versa. Most programming languages use
              coercion, but others use "cast" operators (a type of constructor)
              requiring the programmer to initiate the coercion. "Strong
              substantiality" is related in that a subtype instance can always
              be coerced to any of its supertypes.
          examples: []
          entry_status: valid
          authoritative_source:
            ref: 'ISO 19107:2019'
            clause: '(E), 3.102'
            link: 'https://www.iso.org/standard/66175.html'
          date_accepted: 2019-12-01T16:00:00.000Z
          review_date: 2019-12-01T16:00:00.000Z
          review_status: final
          review_decision: accepted
          review_decision_date: 2019-12-01T16:00:00.000Z
          review_decision_event: Normal ISO processing
          review_decision_notes: 'Publication of document ISO 19107:2019(E)'
          release: '5'
          terms:
            - type: expression
              designation: type coercion <programming>
              normative_status: preferred
        parents: []
        timeCreated: 2019-12-01T16:00:00.000Z
        author:
          name: Glossarist bot
          email: glossarist@ribose.com
