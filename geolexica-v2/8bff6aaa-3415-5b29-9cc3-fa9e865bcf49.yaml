---
data:
  identifier: '2158'
  localized_concepts:
    eng: 7d52330e-0431-579e-a494-16640b9dd3c9
    spa: 69becc79-b6ed-5fab-a971-9eb680670512
id: 8bff6aaa-3415-5b29-9cc3-fa9e865bcf49
date_accepted: '2019-12-02T00:00:00+05:00'
status: valid

---
data:
  dates:
  - date: '2019-12-02T00:00:00+05:00'
    type: accepted
  definition:
  - content: set without any elements
  examples: []
  id: '2158'
  notes:
  - content: Sets are equal if they contain exactly the same elements. Since any two
      empty sets would share exactly the same contained elements (by definition none),
      they are, by definition, equal. The empty set (stem:[O/]) can be considered
      a geometric entity, because all the elements it contains are points. This is
      a vacuous statement since the set stem:[O/] contains no elements, and therefore
      the "for all" statement has nothing to test and is thus true in each of its
      non-existent cases. There are a lot of true but vacuous statements in proofs
      about stem:[O/]. This confuses some programmers since many systems use type
      safe sets, in which the class of the entities determines a class for the container
      set. The math does not care about "class" and only sees sets; so that an empty
      set of aardvarks and an empty set of zebras in mathematics are (is?) the same
      set. The other confusion is that stem:[O/] is not the database Null introduced
      by Codd and used in relational and other query languages in 3 valued logic.
      Null means unknown and many statements involving Null are undecidable (neither
      provably true nor provably false). The empty set is not "lack of knowledge"
      but certainty in the nonexistence of elements in the set. Most statements beginning
      "for all elements in stem:[O/]" are true, but vacuous. Most statements beginning
      "there exist an element in stem:[O/]" are always categorically false. It is
      almost impossible to construct an undecidable statement about stem:[O/]. Null
      and stem:[O/] are not related. "Void" can mean "invalid" or "completely empty."
  release: '5.0'
  sources:
  - origin:
      ref: ISO 19107:2019
      locality:
        type: clause
        reference_from: '3.32'
      link: https://www.iso.org/standard/66175.html
    type: authoritative
  terms:
  - type: expression
    normative_status: preferred
    designation: empty set <mathematics>
  - type: abbreviation
    designation: "∅"
  language_code: eng
  entry_status: valid
  review_date: '2019-12-02T00:00:00+05:00'
  review_decision_date: '2019-12-02T00:00:00+05:00'
  review_decision_event: Normal ISO processing
date_accepted: '2019-12-02T00:00:00+05:00'
id: 7d52330e-0431-579e-a494-16640b9dd3c9

---
data:
  dates:
  - date: '2019-12-02T00:00:00+05:00'
    type: accepted
  definition:
  - content: conjunto sin ningún elemento
  examples: []
  id: '2158'
  notes:
  - content: 'NOTA1: Los conjuntos son iguales si contienen exactamente los mismos
      elementos. Dado que dos conjuntos vacíos cualesquiera compartirían exactamente
      los mismos elementos contenidos (por definición ninguno), son, por definición,
      iguales. El conjunto vacío (∅) puede considerarse una entidad geométrica, porque
      todos los elementos que contiene son puntos. Se trata de una afirmación vacía,
      ya que el conjunto ∅ no contiene ningún elemento y, por lo tanto, la afirmación
      "para todos" no tiene nada que probar y, por lo tanto, es verdadera en cada
      uno de sus casos inexistentes.  Hay muchas declaraciones verdaderas pero vacías
      en las pruebas sobre ∅. Esto confunde a algunos programadores, ya que muchos
      sistemas utilizan conjuntos de tipo seguro, en los que la clase de las entidades
      determina una clase para el conjunto contenedor. A las matemáticas no les importa
      la "clase" y sólo ven conjuntos; así que un conjunto vacío de aardvarks y un
      conjunto vacío de cebras en matemáticas son (¿es?) el mismo conjunto. La otra
      confusión es que ∅ no es el Null de la base de datos introducida por Codd y
      utilizada en lenguajes relacionales y otros lenguajes de consulta en la lógica
      trivalente. Null significa desconocido y muchas afirmaciones que involucran
      a Null son indecidibles (no se puede probar que sean verdaderas ni falsas).
      El conjunto vacío no es "falta de conocimiento" sino certeza en la inexistencia
      de elementos en el conjunto.  La mayoría de las declaraciones que comienzan
      con "para todos los elementos en ∅" son verdaderas, pero vacías. La mayoría
      de las declaraciones que comienzan con "existe un elemento en ∅" son siempre
      categóricamente falsas. Es casi imposible construir una declaración indecidible
      sobre ∅. Null y ∅ no están relacionados. "Void" puede significar "inválido"
      o "completamente vacío".'
  release: '5.0'
  sources:
  - origin:
      ref: ISO 19107:2019
      locality:
        type: clause
        reference_from: '3.32'
      link: https://www.iso.org/standard/66175.html
    type: authoritative
  terms:
  - type: expression
    normative_status: preferred
    designation: conjunto vacío <matemáticas>
  - type: abbreviation
    designation: "∅"
  language_code: spa
  entry_status: valid
  review_date: '2019-12-02T00:00:00+05:00'
  review_decision_date: '2019-12-02T00:00:00+05:00'
  review_decision_event: Procedimiento normal de ISO
date_accepted: '2019-12-02T00:00:00+05:00'
id: 69becc79-b6ed-5fab-a971-9eb680670512
