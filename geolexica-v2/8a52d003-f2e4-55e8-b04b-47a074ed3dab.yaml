---
data:
  identifier: '2255'
  localized_concepts:
    eng: d23c68ab-313f-5703-99cb-c1759ea56fbf
    spa: a60dc6a9-5195-50d4-94a3-d1047ec5775f
id: 8a52d003-f2e4-55e8-b04b-47a074ed3dab
date_accepted: '2019-12-02T00:00:00+05:00'
status: valid

---
data:
  dates:
  - date: '2019-12-02T00:00:00+05:00'
    type: accepted
  definition:
  - content: conversion of one type of value to a value of a different type with similar
      content
  examples: []
  id: '2255'
  notes:
  - content: Point and DirectPosition are informationally identical (related to each
      other in a one to one fashion) in this context. Given a DirectPosition, a Point
      can be constructed. Given a Point, a DirectPosition can be derived from of its
      coordinates. If coercion is supported, a Point may be used where a DirectPosition
      is requested, and vice versa. Most programming languages use coercion, but others
      use "cast" operators (a type of constructor) requiring the programmer to initiate
      the coercion. "Strong substantiality" is related in that a subtype instance
      can always be coerced to any of its supertypes.
  release: '5.0'
  sources:
  - origin:
      ref: ISO 19107:2019
      locality:
        type: clause
        reference_from: '3.102'
      link: https://www.iso.org/standard/66175.html
    type: authoritative
  terms:
  - type: expression
    normative_status: preferred
    designation: type coercion <programming>
  language_code: eng
  entry_status: valid
  review_date: '2019-12-02T00:00:00+05:00'
  review_decision_date: '2019-12-02T00:00:00+05:00'
  review_decision_event: Normal ISO processing
date_accepted: '2019-12-02T00:00:00+05:00'
id: d23c68ab-313f-5703-99cb-c1759ea56fbf

---
data:
  dates:
  - date: '2019-12-02T00:00:00+05:00'
    type: accepted
  definition:
  - content: conversión de un tipo de valor en un valor de un tipo diferente con un
      contenido similar
  examples: []
  id: '2255'
  notes:
  - content: 'NOTA: Point y DirectPosition son idénticos desde el punto de vista informatico
      (relacionados entre sí  uno a uno) en este contexto. Dada una Posición Directa,
      se puede construir un Punto. Dado un Punto, se puede derivar una Posición Directa
      a partir de sus coordenadas. Si se apoya en la coerción, se puede utilizar un
      Punto cuando se solicita una Posición Directa, y viceversa. La mayoría de los
      lenguajes de programación utilizan la coerción, pero otros utilizan operadores
      "cast" (un tipo de constructor) que requiere que el programador inicie la coerción.
      La "fuerte sustancialidad" está relacionada en el sentido de que una instancia
      de subtipo siempre puede ser coercionada a cualquiera de sus supertipos.'
  release: '5.0'
  sources:
  - origin:
      ref: ISO 19107:2019
      locality:
        type: clause
        reference_from: '3.102'
      link: https://www.iso.org/standard/66175.html
    type: authoritative
  terms:
  - type: expression
    normative_status: preferred
    designation: tipo de coerción <programación>
  language_code: spa
  entry_status: valid
  review_date: '2019-12-02T00:00:00+05:00'
  review_decision_date: '2019-12-02T00:00:00+05:00'
  review_decision_event: Procedimiento normal de ISO
date_accepted: '2019-12-02T00:00:00+05:00'
id: a60dc6a9-5195-50d4-94a3-d1047ec5775f
